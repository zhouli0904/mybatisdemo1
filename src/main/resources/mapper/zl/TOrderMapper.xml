<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.mybatisdemo.dao.zl.TOrderMapper">
  <resultMap id="BaseResultMap" type="com.springboot.mybatisdemo.entity.zl.TOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>

  <!--  联合查询：级联属性，封装结果集-->
  <resultMap id="myMap" type="com.springboot.mybatisdemo.entity.zl.OrderInfo2">
    <result column="order_id" property="orderId"/>
    <result column="goods_list" property="goodsList"/>
    <result column="address" property="address"/>
    <result column="state" property="state"/>
    <result column="id" property="tOrder.id"/>
    <result column="order_id" property="tOrder.orderId"/>
    <result column="price" property="tOrder.price"/>
    <result column="user_name" property="tOrder.userName"/>
  </resultMap>

  <resultMap id="myMap2" type="com.springboot.mybatisdemo.entity.zl.OrderInfo2">
    <result column="order_id" property="orderId"/>
    <result column="goods_list" property="goodsList"/>
    <result column="address" property="address"/>
    <result column="state" property="state"/>
<!--    property 指定哪个属性是联合属性 javaType 指定这个属性对象的类型，不能省略-->
    <association property="tOrder" javaType="com.springboot.mybatisdemo.entity.zl.TOrder">
      <id column="id" property="id"/>
      <result column="order_id" property="orderId"/>
      <result column="price" property="price"/>
      <result column="user_name" property="userName"/>
    </association>
  </resultMap>
  <!-- 使用association进行分步查询：
          1、先按照订单id查询订单详情信息
          2、根据查询订单列表的order_id值去订单详情表查询到订单详情信息
       -->
  <resultMap id="myMap3" type="com.springboot.mybatisdemo.entity.zl.OrderInfo2">
    <result column="order_id" property="orderId"/>
    <result column="goods_list" property="goodsList"/>
    <result column="address" property="address"/>
    <result column="state" property="state"/>
    <association property="tOrder"
    select="com.springboot.mybatisdemo.dao.zl.TOrderMapper.getOrderByOrderId"
    column="order_id">
    </association>
  </resultMap>
  <!--  根据订单id 查到订单详情 和 订单列表信息-->
<!--  <select id="getTOderAndInfo" resultMap="myMap2">-->
<!--    select * from order_info o inner join t_order t on o.order_id = t.order_id where t.id = #{id}-->
<!--  </select>-->
  <select id="getTOderAndInfo" resultMap="myMap3">
    select * from order_info where order_id = #{orderId}
  </select>
  <sql id="Base_Column_List">
    id, order_id, price, user_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.springboot.mybatisdemo.entity.zl.TOrder" useGeneratedKeys="true">
    insert into t_order (order_id, price, user_name
      )
    values (#{orderId,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{userName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.springboot.mybatisdemo.entity.zl.TOrder" useGeneratedKeys="true">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="userName != null">
        user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.mybatisdemo.entity.zl.TOrder">
    update t_order
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.mybatisdemo.entity.zl.TOrder">
    update t_order
    set order_id = #{orderId,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      user_name = #{userName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByOrderIDAndId" resultMap="BaseResultMap">
    SELECT * from t_order where order_id = #{orderId} and id = #{id}
  </select>
  <select id="getByMap" resultMap="BaseResultMap">
    SELECT * from t_order where order_id = #{orderId} and id = #{id}
  </select>
  <select id="getOrder" resultMap="BaseResultMap">
    SELECT * from t_order where id = #{param1} and user_name = #{t.userName}
  </select>
  <select id="getOrderById" resultMap="BaseResultMap">
    SELECT * from t_order where id = #{ids[0]}
  </select>
<!--  返回值是list，返回值类型写list里面的数据类型-->
  <select id="getOrderByNameLike" resultMap="BaseResultMap">
    SELECT * from t_order where user_name like #{userName}
  </select>
  <select id="getOrderByIdReturnMap" resultType="java.util.Map">
    SELECT * from t_order where id = #{id}
  </select>
  <select id="getOrderByNameReturnMap" resultType="java.util.Map">
    SELECT * from t_order where user_name like #{userName}
  </select>
  <select id="getOrderByOrderId" resultMap="BaseResultMap">
    select * from t_order where order_id = #{orderId}
  </select>
</mapper>